<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiancheng.om.dao.OrderedFoodMapper">
    <insert id="insert">
        INSERT INTO ordered_food (food_id, order_id, count, is_member, pack_fee, standard_price, member_price_cost, member_price, insert_user, update_user)
        VALUES (#{orderedFood.foodId}, #{orderedFood.orderId}, #{orderedFood.count},
                #{orderedFood.isMember}, #{orderedFood.packFee},
                #{orderedFood.standardPrice}, #{orderedFood.memberPriceCost},
                #{orderedFood.memberPrice}, #{orderedFood.insertUser}, #{orderedFood.updateUser});
    </insert>
    <update id="updateById">
        update ordered_food
        <set>
            <if test="orderedFood.count != null ">
                count = #{orderedFood.count},
            </if>
            <if test="orderedFood.isMember != null ">
                is_member = #{orderedFood.isMember},
            </if>
            <if test="orderedFood.packFee != null ">
                pack_fee = #{orderedFood.packFee},
            </if>
            <if test="orderedFood.standardPrice != null">
                standard_price = #{orderedFood.standardPrice},
            </if>
            <if test="orderedFood.memberPriceCost != null ">
                member_price_cost = #{orderedFood.memberPriceCost},
            </if>
            <if test="orderedFood.memberPrice != null ">
                member_price = #{orderedFood.memberPrice},
            </if>
            <if test="orderedFood.mark != null ">
                mark = #{orderedFood.mark},
            </if>
            <if test="orderedFood.updateUser != null ">
                update_user = #{orderedFood.updateUser},
            </if>
            <if test="1==1">
                update_time = now(),
            </if>
        </set>
        where id = #{orderedFood.id};
    </update>
    <update id="deleteById">
        UPDATE ordered_food
        SET is_deleted = TRUE,
        update_time = current_timestamp
        WHERE id IN
        <foreach collection="idArr" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <sql id="whereClause">
        <where>
            is_deleted = FALSE
            <if test="orderedFood.orderId!=null">
                AND order_id = #{orderedFood.orderId}
            </if>
            <if test="orderedFood.foodId!=null">
                AND food_id = #{orderedFood.foodId}
            </if>
        </where>
    </sql>

    <select id="list" resultType="map">
        SELECT
        id,
        food_id `foodId`,
        order_id `orderId`,
        count,
        is_member `isMember`,
        pack_fee `packFee`,
        standard_price `standardPrice`,
        member_price_cost `memberPriceCost`,
        member_price `memberPrice`,
        mark,
        insert_time `insertTime`,
        update_time `updateTime`,
        is_deleted `isDeleted`
        FROM ordered_food
        <include refid="whereClause"/>
    </select>

    <select id="count" resultType="int">
        SELECT count(*)
        FROM ordered_food
        <include refid="whereClause"/>
    </select>
</mapper>
